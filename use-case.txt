This use case demonstrates how to use the `sheesh` command-line tool to manage and connect to multiple SSH servers.

## Scenario

Imagine you are a developer who regularly connects to several remote servers:

*   A personal web server with the address `user@mywebserver.com`.
*   A development database server with the address `devuser@db.internal` which requires a specific identity file and local port forwarding.
*   An old server that you no longer need to access.

## Using `sheesh` to Manage SSH Connections

### 1. Add a New SSH Connection

First, let's add the personal web server to `sheesh` with the alias `webserver`:

```bash
sheesh add webserver user@mywebserver.com
```

Next, let's add the development database server with the alias `devdb`. This connection requires a more complex SSH command, so we'll enclose it in quotes:

```bash
sheesh add devdb 'ssh -L 5433:localhost:5432 devuser@db.internal -i ~/.ssh/dev_id'
```

### 2. List Saved Connections

Now, you can list all the saved connections to see what you have configured:

```bash
sheesh list
```

The output will be:

```
webserver:user@mywebserver.com
devdb:ssh -L 5433:localhost:5432 devuser@db.internal -i ~/.ssh/dev_id
```

### 3. Connect to a Server

To connect to your personal web server, use the `connect` command with the alias `webserver`:

```bash
sheesh connect webserver
```

Or, you can use the shorter `c` command to connect to the development database:

```bash
sheesh c devdb
```

### 4. Edit an Existing Connection

Suppose the username for your web server changes to `newuser` and the port to `2200`. You can edit the existing `webserver` connection like this:

```bash
sheesh edit webserver newuser@mywebserver.com -p 2200
```

### 5. Remove a Connection

Finally, if you no longer need to access the old server, you can remove it from your saved connections. First, let's add an old server:

```bash
sheesh add oldserver user@oldserver.com
```

Now, you can remove it using the `remove` command:

```bash
sheesh remove oldserver
```

This will delete the `oldserver` alias and its connection details from your `~/.sheesh` configuration file.
